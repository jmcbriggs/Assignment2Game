name: Build Project and Publish to itch.io
on: [push]
jobs:
  build:
    name: Build Project and Publish to itch.io âœ¨
    runs-on: ubuntu-latest
    # This stops builds that are in-progress once a new commit comes in
    concurrency: 
      group: unity-build
      cancel-in-progress: true
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true  
      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library
      # Build
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64
       # Output
      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build/windows


      # Set variables for version tagging
      - name: Set release date
        run: echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
      - name: Set short hash
        run: echo "SHORT_HASH=$(git rev-parse --short HEAD)" >> ${GITHUB_ENV}

      # Set variables for version tagging
      - name: Set release date
        run: echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
      - name: Set short hash
        run: echo "SHORT_HASH=$(git rev-parse --short HEAD)" >> ${GITHUB_ENV}

      # Deploy
      - name: Upload build to itch.io
        uses: robpc/itchio-upload-action@v1
        with:
          path: build/windows
          project: ${{ secrets.ITCH_PROJECT }}
          channel: windows
          api-key: ${{ secrets.BUTLER_CREDENTIALS }}
          version: ${{ env.RELEASE_DATE }}-${{ env.SHORT_HASH }}

      # Build WebGL
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

       # Output WebGL
      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build/webgl

      # Deploy WebGL
      - name: Upload build to itch.io
        uses: robpc/itchio-upload-action@v1
        with:
          path: build/webgl
          project: ${{ secrets.ITCH_PROJECT }}
          channel: webgl
          api-key: ${{ secrets.BUTLER_CREDENTIALS }}
          version: ${{ env.RELEASE_DATE }}-${{ env.SHORT_HASH }}